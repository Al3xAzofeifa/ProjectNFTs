@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<ProjectNFTs.Application.DTOs.EncabezadoFacturaDTO>

@{
    ViewData["Title"] = "Anular";
}

<h1>Listado de Facturas</h1>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<table id="sortable" class="table table-striped table-hover table-responsive-md table-sm mt-3" style="border-radius: 5px; overflow: hidden; font-size:medium">
    <thead style="background-color: black; color: #fff; cursor:pointer; text-align: left;">
        <tr style="text-align: center;">
            <th onclick="sortBy(0)">
                @Html.DisplayNameFor(model => model.IdFactura)
            </th>
            <th onclick="sortBy(1)">
                @Html.DisplayNameFor(model => model.IdCliente)
            </th>
            <th onclick="sortBy(2)">
                @Html.DisplayNameFor(model => model.IdTarjeta)
            </th>
            <th onclick="sortBy(3)">
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th onclick="sortBy(4)">
                @Html.DisplayNameFor(model => model.EstadoFactura)
            </th>
            <th style="text-align: center;">Opciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="row_@item.IdFactura" style="text-align: center;">
                <td>
                    @Html.DisplayFor(modelItem => item.IdFactura)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NombreCliente)
                </td>
                <td>
                    @{
                        string tarjeta = item.IdTarjeta + "-" + item.DescripcionTarjeta;
                        @Html.Raw(tarjeta)
                        ;
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Total) ETH
                </td>
                <td id="estado_@item.IdFactura">
                    @{
                        var estadoText = item.EstadoFactura ? "Activo" : "Inactivo";
                        var estadoColor = item.EstadoFactura ? "green" : "red";
                    }
                    <span style="color: @estadoColor">
                        @Html.Raw("<strong>" + estadoText + "</strong>")
                    </span>
                </td>
                <td style="text-align: center;">
                    <a data-ajax="true" class="btn btn-secondary  bi-info-circle"
                       data-ajax-complete="onComplete"
                       data-ajax-mode="replace"
                       href='@Url.Action("_Details", "Factura", new { id  = item.IdFactura })'>
                        Detalles
                    </a> |
                    <button type="button" class="btn btn-danger bi bi-trash" id="btnAnular_@item.IdFactura"
                            onclick="deleteItem(@item.IdFactura)" @(item.EstadoFactura ? "" : "disabled")>
                        Anular
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>


@Html.PagedListPager((IPagedList)Model, page =>
                        Url.Action("Anular", new { page }), new PagedListRenderOptions
                    {
                        Display = PagedListDisplayMode.Always,
                        MaximumPageNumbersToDisplay = 5,
                        LiElementClasses = new String[] { "page-item" },
                        PageClasses = new String[] { "page-link" }
                    })

<br />
<div id="contenedor"></div>
<div id="loader" class="xxxx"></div>
<br />


@section scripts {
    <style>

        /* Estilo para los enlaces de paginación */
        .page-link {
            color: #007bff;
            background-color: transparent;
            border: 1px solid #007bff;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color 0.3s, color 0.3s;
        }

            /* Estilo para los enlaces de paginación en estado de hover */
            .page-link:hover {
                background-color: #007bff;
                border: 1px solid #007bff;
                color: #fff;
            }

        /* Estilo para el enlace de la página activa */
        .page-item.active .page-link {
            background-color: #007bff;
            color: #fff;
            border-color: #007bff;
        }

    </style>

    <script type="text/javascript">

        function onComplete(data) {
            Swal.fire({
                title: 'Detalles ',
                html: data.responseText,
                showDenyButton: false,
                showOkButton: false,
                showCancelButton: false,
            })
        };

        function deleteItem(id) {
            Swal.fire({
                title: '¿Anular factura ?',
                html: '¿Estás seguro de que quieres anular la factura <strong>#' + id + '</strong>?<br>Esta acción no se puede deshacer.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sí, anularla',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    const myRequest = "/Factura/CancelConfirm?id=" + id;
                    fetch(myRequest, {
                        method: 'POST',
                    }).then((response) => response.text())
                        .then((text) => {
                            console.log(text);
                            // Eliminar la fila correspondiente de la tabla
                            onBegin();
                            setTimeout(function () {
                                var btnAnular = document.getElementById("btnAnular_" + id);
                                if (btnAnular) {
                                    btnAnular.disabled = true; // Deshabilitar el botón
                                }
                                var estadoElement = document.getElementById("estado_" + id);
                                if (estadoElement) {
                                    estadoElement.innerHTML = '<span style="color:red;"><strong>Inactivo</strong></span>';
                                }

                                document.getElementById("loader").className = "xxxx";
                                toastr.error('Se ha anulado la factura correctamente', 'Atención');
                            }, 1000);
                        });
                }
            });
        }

        function onBegin() {
            console.log("onBegin")
            document.getElementById("loader").className = "loading";
        }

        function editarFactura(id) {
            // Redireccionar al usuario a la página de edición con el ID del cliente
            window.location.href = "/Factura/Edit/" + id;
        };

    </script>


    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}